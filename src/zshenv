autoload -U compinit
autoload colors
compinit -u
colors
bindkey -e

#Path
export PATH=/usr/local/bin:/usr/local/sbin:$PATH

# Env Vars
export EDITOR=nvim
export CLICOLOR=1
export CDPATH=~:~/src/:~/src/work
export GREP_OPTIONS='--color=auto'

# Options
setopt nonomatch          # allow us to do bracket-based commands without ugliness
setopt EXTENDED_HISTORY   # add timestamps to history
setopt LOCAL_OPTIONS      # allow functions to have local options
setopt LOCAL_TRAPS        # allow functions to have local traps
setopt PROMPT_SUBST       # allow for var / fn expansion in prompt substitution
setopt COMPLETE_IN_WORD   # allow for autocomplete within words
setopt IGNORE_EOF         # do not exist on end-of-file
setopt HIST_IGNORE_DUPS   # remove dups from history
setopt APPEND_HISTORY     # adds history
setopt INC_APPEND_HISTORY SHARE_HISTORY  # adds history incrementally and share it across sessions
setopt HIST_IGNORE_ALL_DUPS  # don't record dupes in history
setopt HIST_REDUCE_BLANKS # removes blank commands

export NVM_DIR=~/.nvm
. $(brew --prefix nvm)/nvm.sh

# Completion
zstyle ':completion::complete:*' use-cache 1
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}' # case insensitive completion
zstyle ':completion:*:default' menu 'select=0'      # menu-style

# Functions
git_prompt_info() {
  ref=$($(which git) symbolic-ref HEAD 2> /dev/null) || return
  mods=$(vcprompt -f %m%u%a)
  echo "%{$reset_color%}(%{$fg[red]%}${ref#refs/heads/}%{$fg[yellow]%}${mods}%{$reset_color%})"
}

imprivata_path_append() {
  export PATH="${PATH}:/Users/pratt/src/work/imprivata/ng/dev-tools"
}

# Prompt
export PROMPT='%m%{$reset_color%}:%{$fg[cyan]%}%c$(git_prompt_info) %{$reset_color%}%% '

# Aliases
alias bx="bundle exec"
alias ls="ls -lh"

export LANG="en_US.UTF-8"
export LC_COLLATE="en_US.UTF-8"
export LC_CTYPE="en_US.UTF-8"
export LC_MESSAGES="en_US.UTF-8"
export LC_MONETARY="en_US.UTF-8"
export LC_NUMERIC="en_US.UTF-8"
export LC_TIME="en_US.UTF-8"


typeset -U path cdpath fpath
export ANDROID_HOME=/usr/local/opt/android-sdk
